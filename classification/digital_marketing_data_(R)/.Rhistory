for (j in 1:(length(datamrkt)-1)){
variable <- colnames(datamrkt[j])
for (i in datamrkt[j]){
sum_outliers <- sum(is_outlier(i))
}
row <- data.frame(variable,sum_outliers)
outlier <- rbind(outlier, row)
}
View(outlier)
View(row)
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) |
x > quantile(x, 0.75) + 1.5 * IQR(x))
} #Setting up outlier function
outlier <- data.frame(variable = character(),
sum_outliers = integer(),
stringsAsFactors=FALSE)
for (j in 1:(length(datamrkt)-1)){
variable <- colnames(datamrkt[j])
for (i in datamrkt[j]){
sum_outliers <- sum(is_outlier(i))
}
row <- data.frame(variable,sum_outliers)
outlier <- rbind(outlier, row)
}
datamrkt$Salesbinary <- if_else(datamrkt$Sales >= 272.5, 1, 0)
View(Data2)
Salesbinary <- if_else(datamrkt$Sales >= 272.5, 1, 0)
datamrkt$Salesbinary <- Salesbinary
summary(datamrkt)
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) |
x > quantile(x, 0.75) + 1.5 * IQR(x))
} #Setting up outlier function
outlier <- data.frame(variable = character(),
sum_outliers = integer(),
stringsAsFactors=TRUE)
for (j in 1:(length(datamrkt)-1)){
variable <- colnames(datamrkt[j])
for (i in datamrkt[j]){
sum_outliers <- sum(is_outlier(i))
}
row <- data.frame(variable,sum_outliers)
outlier <- rbind(outlier, row)
}
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) |
x > quantile(x, 0.75) + 1.5 * IQR(x))
} #Setting up outlier function
outlier <- data.frame(variable = numeric(),
sum_outliers = integer(),
stringsAsFactors=FALSE)
for (j in 1:(length(datamrkt)-1)){
variable <- colnames(datamrkt[j])
for (i in datamrkt[j]){
sum_outliers <- sum(is_outlier(i))
}
row <- data.frame(variable,sum_outliers)
outlier <- rbind(outlier, row)
}
library(knitr)
library(rmdformats)
## Global options
options(max.print="75")
opts_chunk$set(echo=FALSE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=75)
library(dplyr)
datamrkt <- read.csv("D:/1. Active Projects/Data Analysis/Personal Projects Directory/Marketing & Sales Data Predictive Modeling/Dummy Data HSS.csv")
knitr::kable(head(datamrkt))
# Loading Dataset
datamrkt <- read.csv("D:/1. Active Projects/Data Analysis/Personal Projects Directory/Marketing & Sales Data Predictive Modeling/Dummy Data HSS.csv")
# Loading Libraries Required
library(dplyr)
library(tidyr)
library(caret)
library(ggplot2)
library(psych)
library(mice)
library(InformationValue)
library(ROSE)
library(rpart)
library(randomForest)
library(gridExtra)
library(highcharter)
library(prettydoc)
summary(datamrkt)
datamrkt$Influencer <- as.factor(datamrkt$Influencer)
is.factor(datamrkt$Influencer)
sum(is.na(datamrkt))
mean(is.na(datamrkt))
imp <- mice(datamrkt, method = "norm.nob", m = 1) #Impute data
Data2 <- complete(imp) #Store data
sapply(Data2, anyNA)
datamrkt <- na.omit(datamrkt)
sapply(datamrkt, anyNA)
require(highcharter)
tvbox <- data_to_boxplot(datamrkt, TV, add_outliers = TRUE)
highchart() %>%
hc_xAxis(type = "category") %>%
hc_add_series_list(tvbox) %>%
hc_add_theme(hc_theme_flat())
radbox <- data_to_boxplot(datamrkt, Radio, add_outliers = TRUE)
highchart() %>%
hc_xAxis(type = "category") %>%
hc_add_series_list(radbox) %>%
hc_add_theme(hc_theme_flat())
sobox <- data_to_boxplot(datamrkt, Social.Media, add_outliers = TRUE)
highchart() %>%
hc_xAxis(type = "category") %>%
hc_add_series_list(sobox) %>%
hc_add_theme(hc_theme_flat())
sabox <- data_to_boxplot(datamrkt, Sales, add_outliers = TRUE)
highchart() %>%
hc_xAxis(type = "category") %>%
hc_add_series_list(sabox) %>%
hc_add_theme(hc_theme_flat())
require(stats)
tvstat <- boxplot.stats(datamrkt$TV)$out
out_tvstat <- which(datamrkt$TV %in% c(out))
require(stats)
tvstat <- boxplot.stats(datamrkt$TV)$out
out_tvstat <- which(datamrkt$TV %in% c(tvstat))
out_tvstat
radstat <- boxplot.stats(datamrkt$TV)$out
out_radstat <- which(datamrkt$TV %in% c(radstat))
out_radstat
radstat <- boxplot.stats(datamrkt$Radio)$out
out_radstat <- which(datamrkt$Radio %in% c(radstat))
out_radstat
socstat <- boxplot.stats(datamrkt$Social.Media)$out
out_socstat <- which(datamrkt$Social.Media %in% c(socstat))
out_socstat
sastat <- boxplot.stats(datamrkt$Sales)$out
out_sastat <- which(datamrkt$Sales %in% c(sastat))
out_sastat
datamrkt <- na.omit(datamrkt)
sapply(datamrkt, anyNA)
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) |
x > quantile(x, 0.75) + 1.5 * IQR(x))
}
outlier <- data.frame(variable = character(),
sum_outliers = integer(),
stringsAsFactors=FALSE)
for (j in 1:(length(datamrkt)-1)){
variable <- colnames(datamrkt[j])
for (i in datamrkt[j]){
sum_outliers <- sum(is_outlier(i))
}
row <- data.frame(variable,sum_outliers)
outlier <- rbind(outlier, row)
}
Treshold.Check <- for (i in 1:nrow(outlier)){
if (outlier[i,2]/nrow(datamrkt) * 100 >= 5){
print(paste(outlier[i,1],
"The outliers are above 5% treshold",
round(outlier[i,2]/nrow(datamrkt) * 100, digits = 2),
'%'))
}
}
Treshold.Check
View(outlier)
library(knitr)
library(rmdformats)
## Global options
options(max.print="75")
opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=75)
highchart() %>%
hc_title(text= "Chart with a caption") %>%
hc_subtitle(text= "This is the subtitle") %>%
hc_xAxis(categories = c("Apples", "Pears", "Banana", "Orange")) %>%
hc_add_series(
data = c(1, 4, 3, 5),
type = "column",
name = "Fruits"
)
sabox <- data_to_boxplot(datamrkt, Sales, add_outliers = TRUE)
highchart() %>%
hc_xAxis(type = "category") %>%
hc_add_series_list(sabox) %>%
hc_xAxis(categories = c("Normal Distribution", "Outliers"))
hc_add_theme(hc_theme_flat())
sabox <- data_to_boxplot(datamrkt, Sales, add_outliers = TRUE)
highchart() %>%
hc_xAxis(type = "category") %>%
hc_add_series_list(sabox) %>%
hc_xAxis(categories = c("Normal Distribution", "Outliers"))%>%
hc_add_theme(hc_theme_flat())
sastat <- boxplot.stats(datamrkt$Sales)$out
out_sastat <- which(datamrkt$Sales %in% c(sastat))
out_sastat
sabox <- data_to_boxplot(datamrkt, Sales, add_outliers = TRUE)
highchart() %>%
hc_xAxis(type = "category") %>%
hc_add_series_list(sabox,
name = Normal) %>%
hc_add_theme(hc_theme_flat())
highchart() %>%
hc_add_series(
data = c(7.0, 6.9, 9.5, 14.5, 18.2, 21.5, 25.2, 26.5, 23.3, 18.3, 13.9, 9.6),
type = "spline"
) %>%
hc_xAxis(
title = list(text = "x Axis at top"),
alternateGridColor = "#FDFFD5",
opposite = TRUE,
plotLines = list(
list(
label = list(text = "This is a plotLine"),
color = "#FF0000",
width = 2,
value = 5.5
)
)
)
hcboxplot(x = iris$Sepal.Length, var = iris$Species, color = "red")
library(knitr)
library(rmdformats)
## Global options
options(max.print="75")
opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=75)
library(knitr)
library(rmdformats)
## Global options
options(max.print="75")
opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=75)
library(dplyr)
datamrkt <- read.csv("D:/1. Active Projects/Data Analysis/Personal Projects Directory/Marketing & Sales Data Predictive Modeling/Dummy Data HSS.csv")
knitr::kable(head(datamrkt))
# Loading Dataset
datamrkt <- read.csv("D:/1. Active Projects/Data Analysis/Personal Projects Directory/Marketing & Sales Data Predictive Modeling/Dummy Data HSS.csv")
# Loading Libraries Required
library(dplyr)
library(tidyr)
library(caret)
library(ggplot2)
library(psych)
library(mice)
library(InformationValue)
library(ROSE)
library(rpart)
library(stats)
library(randomForest)
library(gridExtra)
library(highcharter)
library(prettydoc)
summary(datamrkt)
datamrkt$Influencer <- as.factor(datamrkt$Influencer)
is.factor(datamrkt$Influencer)
sum(is.na(datamrkt))
mean(is.na(datamrkt))
imp <- mice(datamrkt, method = "norm.nob", m = 1) #Impute data
Data2 <- complete(imp) #Store data
sapply(Data2, anyNA)
datamrkt <- na.omit(datamrkt)
sapply(datamrkt, anyNA)
require(highcharter)
tvbox <- data_to_boxplot(datamrkt, TV, add_outliers = TRUE)
highchart() %>%
hc_xAxis(type = "category") %>%
hc_add_series_list(tvbox) %>%
hc_add_theme(hc_theme_flat())
tvstat <- boxplot.stats(datamrkt$TV)$out
out_tvstat <- which(datamrkt$TV %in% c(tvstat))
out_tvstat
radbox <- data_to_boxplot(datamrkt, Radio, add_outliers = TRUE)
highchart() %>%
hc_xAxis(type = "category") %>%
hc_add_series_list(radbox) %>%
hc_add_theme(hc_theme_flat())
radstat <- boxplot.stats(datamrkt$Radio)$out
out_radstat <- which(datamrkt$Radio %in% c(radstat))
out_radstat
sobox <- data_to_boxplot(datamrkt, Social.Media, add_outliers = TRUE)
highchart() %>%
hc_xAxis(type = "category") %>%
hc_add_series_list(sobox) %>%
hc_add_theme(hc_theme_flat())
socstat <- boxplot.stats(datamrkt$Social.Media)$out
out_socstat <- which(datamrkt$Social.Media %in% c(socstat))
out_socstat
sabox <- data_to_boxplot(datamrkt, Sales, add_outliers = TRUE)
highchart() %>%
hc_xAxis(type = "category") %>%
hc_add_series_list(sabox) %>%
hc_add_theme(hc_theme_flat())
sastat <- boxplot.stats(datamrkt$Sales)$out
out_sastat <- which(datamrkt$Sales %in% c(sastat))
out_sastat
table(Data$Sales)
round(prop.table((table(Data$Sales))),2)
table(datamrkt$Sales)
round(prop.table((table(datamrkt$Sales))),2)
View(datamrkt)
Salesbinary <- if_else(datamrkt$Sales >= 272.5, 1, 0)
datamrkt$Salesbinary <- Salesbinary
summary(datamrkt)
table(datamrkt$Salesbinary)
round(prop.table((table(datamrkt$Salesbinary))),2)
require(psych)
require(psych)
pairs.panels(datamrkt, density = TRUE, ellipses = TRUE, digits = 2) %>%
theme_minimal()
require(psych)
pairs.panels(datamrkt, ellipses = TRUE) %>%
theme_minimal()
library(knitr)
library(rmdformats)
## Global options
options(max.print="75")
opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=75)
library(dplyr)
datamrkt <- read.csv("D:/1. Active Projects/Data Analysis/Personal Projects Directory/Marketing & Sales Data Predictive Modeling/Dummy Data HSS.csv")
knitr::kable(head(datamrkt))
# Loading Dataset
datamrkt <- read.csv("D:/1. Active Projects/Data Analysis/Personal Projects Directory/Marketing & Sales Data Predictive Modeling/Dummy Data HSS.csv")
# Loading Libraries Required
library(dplyr)
library(tidyr)
library(caret)
library(ggplot2)
library(psych)
library(mice)
library(InformationValue)
library(ROSE)
library(rpart)
library(stats)
library(randomForest)
library(gridExtra)
library(highcharter)
library(prettydoc)
summary(datamrkt)
datamrkt$Influencer <- as.factor(datamrkt$Influencer)
is.factor(datamrkt$Influencer)
sum(is.na(datamrkt))
mean(is.na(datamrkt))
imp <- mice(datamrkt, method = "norm.nob", m = 1) #Impute data
Data2 <- complete(imp) #Store data
sapply(Data2, anyNA)
datamrkt <- na.omit(datamrkt)
sapply(datamrkt, anyNA)
require(highcharter)
tvbox <- data_to_boxplot(datamrkt, TV, add_outliers = TRUE)
highchart() %>%
hc_xAxis(type = "category") %>%
hc_add_series_list(tvbox) %>%
hc_add_theme(hc_theme_flat())
tvstat <- boxplot.stats(datamrkt$TV)$out
out_tvstat <- which(datamrkt$TV %in% c(tvstat))
out_tvstat
radbox <- data_to_boxplot(datamrkt, Radio, add_outliers = TRUE)
highchart() %>%
hc_xAxis(type = "category") %>%
hc_add_series_list(radbox) %>%
hc_add_theme(hc_theme_flat())
radstat <- boxplot.stats(datamrkt$Radio)$out
out_radstat <- which(datamrkt$Radio %in% c(radstat))
out_radstat
sobox <- data_to_boxplot(datamrkt, Social.Media, add_outliers = TRUE)
highchart() %>%
hc_xAxis(type = "category") %>%
hc_add_series_list(sobox) %>%
hc_add_theme(hc_theme_flat())
socstat <- boxplot.stats(datamrkt$Social.Media)$out
out_socstat <- which(datamrkt$Social.Media %in% c(socstat))
out_socstat
sabox <- data_to_boxplot(datamrkt, Sales, add_outliers = TRUE)
highchart() %>%
hc_xAxis(type = "category") %>%
hc_add_series_list(sabox) %>%
hc_add_theme(hc_theme_flat())
sastat <- boxplot.stats(datamrkt$Sales)$out
out_sastat <- which(datamrkt$Sales %in% c(sastat))
out_sastat
require(psych)
pairs.panels(datamrkt, ellipses = TRUE) %>%
theme_minimal()
pairs.panels(datamrkt, ellipses = TRUE)
describe(datamrkt)
View(datamrkt)
par(mfrow = 1,1)
par(mfrow=c(1,1))
pairs.panels(datamrkt, ellipses = TRUE)
describe(datamrkt)
knitr:: kable(describe(datamrkt))
library(knitr)
library(rmdformats)
## Global options
options(max.print="75")
opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=75)
library(dplyr)
datamrkt <- read.csv("D:/1. Active Projects/Data Analysis/Personal Projects Directory/Marketing & Sales Data Predictive Modeling/Dummy Data HSS.csv")
knitr::kable(head(datamrkt))
# Loading Dataset
datamrkt <- read.csv("D:/1. Active Projects/Data Analysis/Personal Projects Directory/Marketing & Sales Data Predictive Modeling/Dummy Data HSS.csv")
# Loading Libraries Required
library(dplyr)
library(tidyr)
library(caret)
library(ggplot2)
library(psych)
library(mice)
library(InformationValue)
library(ROSE)
library(rpart)
library(stats)
library(randomForest)
library(gridExtra)
library(highcharter)
library(prettydoc)
summary(datamrkt)
datamrkt$Influencer <- as.factor(datamrkt$Influencer)
is.factor(datamrkt$Influencer)
sum(is.na(datamrkt))
mean(is.na(datamrkt))
imp <- mice(datamrkt, method = "norm.nob", m = 1) #Impute data
Data2 <- complete(imp) #Store data
sapply(Data2, anyNA)
datamrkt <- na.omit(datamrkt)
sapply(datamrkt, anyNA)
require(highcharter)
tvbox <- data_to_boxplot(datamrkt, TV, add_outliers = TRUE)
highchart() %>%
hc_xAxis(type = "category") %>%
hc_add_series_list(tvbox) %>%
hc_add_theme(hc_theme_flat())
tvstat <- boxplot.stats(datamrkt$TV)$out
out_tvstat <- which(datamrkt$TV %in% c(tvstat))
out_tvstat
radbox <- data_to_boxplot(datamrkt, Radio, add_outliers = TRUE)
highchart() %>%
hc_xAxis(type = "category") %>%
hc_add_series_list(radbox) %>%
hc_add_theme(hc_theme_flat())
radstat <- boxplot.stats(datamrkt$Radio)$out
out_radstat <- which(datamrkt$Radio %in% c(radstat))
out_radstat
sobox <- data_to_boxplot(datamrkt, Social.Media, add_outliers = TRUE)
highchart() %>%
hc_xAxis(type = "category") %>%
hc_add_series_list(sobox) %>%
hc_add_theme(hc_theme_flat())
socstat <- boxplot.stats(datamrkt$Social.Media)$out
out_socstat <- which(datamrkt$Social.Media %in% c(socstat))
out_socstat
sabox <- data_to_boxplot(datamrkt, Sales, add_outliers = TRUE)
highchart() %>%
hc_xAxis(type = "category") %>%
hc_add_series_list(sabox) %>%
hc_add_theme(hc_theme_flat())
sastat <- boxplot.stats(datamrkt$Sales)$out
out_sastat <- which(datamrkt$Sales %in% c(sastat))
out_sastat
par(mfrow=c(1,1))
require(GGally)
ggpairs(datamrkt)
library(knitr)
library(rmdformats)
## Global options
options(max.print="75")
opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=75)
par(mfrow=c(1,1))
require(psych)
pairs.panels(datamrkt)
